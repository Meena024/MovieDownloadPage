{"ast":null,"code":"var _jsxFileName = \"/Users/meena/Desktop/React/MovieDownloadPage/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [retrying, setRetrying] = useState(false);\n  const retryIntervalRef = useRef(null);\n  async function fetchMoviesHandler() {\n    setIsLoading(true);\n    setError(null);\n    setRetrying(false);\n    try {\n      const response = await fetch(\"https://swapi.dev/api/film/\");\n      if (!response.ok) {\n        throw new Error(\"Something went wrong... Retrying\");\n      }\n      const data = await response.json();\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n      setIsLoading(false);\n      clearInterval(retryIntervalRef.current);\n    } catch (err) {\n      setError(err.message);\n      if (!retrying) {\n        setRetrying(true);\n        retryIntervalRef.current = setInterval(fetchMoviesHandler, 5000);\n      }\n      setIsLoading(false);\n    }\n  }\n  function cancelRetryHandler() {\n    clearInterval(retryIntervalRef.current);\n    setRetrying(false);\n    setError(\"Retrying cancelled.\");\n  }\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no movies!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 17\n  }, this);\n  if (movies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), retrying && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cancelRetryHandler,\n        children: \"Cancel Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        disabled: retrying,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fVIemJGGWda8VIeLear/KCodPa4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","retrying","setRetrying","retryIntervalRef","fetchMoviesHandler","response","fetch","ok","Error","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","clearInterval","current","err","message","setInterval","cancelRetryHandler","content","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","Fragment","disabled","_c","$RefreshReg$"],"sources":["/Users/meena/Desktop/React/MovieDownloadPage/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [retrying, setRetrying] = useState(false);\n  const retryIntervalRef = useRef(null);\n\n  async function fetchMoviesHandler() {\n    setIsLoading(true);\n    setError(null);\n    setRetrying(false);\n    try {\n      const response = await fetch(\"https://swapi.dev/api/film/\");\n      if (!response.ok) {\n        throw new Error(\"Something went wrong... Retrying\");\n      }\n      const data = await response.json();\n      const transformedMovies = data.results.map((movieData) => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date,\n        };\n      });\n      setMovies(transformedMovies);\n      setIsLoading(false);\n      clearInterval(retryIntervalRef.current);\n    } catch (err) {\n      setError(err.message);\n      if (!retrying) {\n        setRetrying(true);\n        retryIntervalRef.current = setInterval(fetchMoviesHandler, 5000);\n      }\n      setIsLoading(false);\n    }\n  }\n\n  function cancelRetryHandler() {\n    clearInterval(retryIntervalRef.current);\n    setRetrying(false);\n    setError(\"Retrying cancelled.\");\n  }\n\n  let content = <p>Found no movies!</p>;\n\n  if (movies.length > 0) {\n    content = <MoviesList movies={movies} />;\n  }\n\n  if (error) {\n    content = (\n      <div>\n        <p>{error}</p>\n        {retrying && <button onClick={cancelRetryHandler}>Cancel Retry</button>}\n      </div>\n    );\n  }\n\n  if (isLoading) {\n    content = <p>Loading... </p>;\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler} disabled={retrying}>\n          Fetch Movies\n        </button>\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}